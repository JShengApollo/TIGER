

[ RUN ] parsing code...

let var id , id : int := intlit ; in id ( id ) ; let var id , id : int := intlit ; in id ( id ) ; end end

----------------------------------------
Table: Variables
Name: a
----------------------------------------
Scope: 0
Type: int
Dimension: 0
Parameters: -
Parameter types: -
Parameter dimensions: -
Return type: -


----------------------------------------
Table: Variables
Name: b
----------------------------------------
Scope: 0
Type: int
Dimension: 0
Parameters: -
Parameter types: -
Parameter dimensions: -
Return type: -


----------------------------------------
Table: Variables
Name: c
----------------------------------------
Scope: 0
Type: int
Dimension: 0
Parameters: -
Parameter types: -
Parameter dimensions: -
Return type: -


----------------------------------------
Table: Variables
Name: d
----------------------------------------
Scope: 0
Type: int
Dimension: 0
Parameters: -
Parameter types: -
Parameter dimensions: -
Return type: -


----------------------------------------
Table: Types
Name: float
----------------------------------------
Scope: 0
Type: float
Dimension: 0
Parameters: -
Parameter types: -
Parameter dimensions: -
Return type: -


----------------------------------------
Table: Types
Name: int
----------------------------------------
Scope: 0
Type: int
Dimension: 0
Parameters: -
Parameter types: -
Parameter dimensions: -
Return type: -


----------------------------------------
Table: Functions
Name: exit
----------------------------------------
Scope: 0
Type: -
Dimension: -
Parameters: [i]
Parameter types: [int]
Parameter dimensions: [0]
Return type: -


----------------------------------------
Table: Functions
Name: flush
----------------------------------------
Scope: 0
Type: -
Dimension: -
Parameters: []
Parameter types: []
Parameter dimensions: []
Return type: -


----------------------------------------
Table: Functions
Name: not
----------------------------------------
Scope: 0
Type: -
Dimension: -
Parameters: [i]
Parameter types: [int]
Parameter dimensions: [0]
Return type: int


----------------------------------------
Table: Functions
Name: printi
----------------------------------------
Scope: 0
Type: -
Dimension: -
Parameters: [i]
Parameter types: [int]
Parameter dimensions: [0]
Return type: -
----------------------------------------



[ OK ] successful parse...


----------------------------------------
Generate IR CODE ...
----------------------------------------
    assign, a, 0,
    assign, b, 0,
main:
    call, printi, a
    assign, c, 0,
    assign, d, 0,
    call, printi, d
    return, , ,
----------------------------------------
